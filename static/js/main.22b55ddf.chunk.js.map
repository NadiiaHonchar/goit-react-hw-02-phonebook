{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","text","input","button","ulStyle","list","ContactForm","state","contacts","name","number","handleInputChange","e","_e$currentTarget","currentTarget","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","props","onSubmit","reset","react_default","a","createElement","Fragment","this","className","style","form","type","onChange","pattern","title","required","Component","ContactList","_ref","onDelContact","map","_ref2","id","key","onClick","Filter","App","filter","searchName","contact","toLowerCase","includes","addContact","data","uuidv4","inputName","alert","concat","prevState","toConsumableArray","changeFilter","delContact","normalizedFilter","visibleContacts","components_ContactForm_ContactForm","components_Filter_Filter","components_ContactList_ContactList","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.22b55ddf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__1X_L7\",\"input\":\"ContactForm_input__1EFtL\",\"button\":\"ContactForm_button__ZUJz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ulStyle\":\"ContactList_ulStyle__2Zfns\",\"button\":\"ContactList_button__29QRx\",\"list\":\"ContactList_list__1bELj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2mLRC\",\"input\":\"Filter_input__3SIEZ\"};","// import React from \"react\";\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component\r\n{\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleInputChange =(e)=> {\r\n    const {name, value} = e.currentTarget;\r\n    this.setState({[name]: value});    \r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  }\r\n\r\n  reset = ()=>\r\n  {\r\n    this.setState({contacts: [],\r\n      name: '',\r\n      number: '' })\r\n  }\r\n\r\n  render(){ \r\n    return(\r\n      <>\r\n      <form onSubmit={this.handleSubmit} className={style.form}>\r\n      <h2 className={style.text}>Name</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={this.state.name}\r\n        onChange={this.handleInputChange}\r\n        className={style.input}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <h2 className={style.text}>Number</h2>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={this.state.number}\r\n        onChange={this.handleInputChange}\r\n        className={style.input}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button type=\"submit\" name=\"button\" className={style.button}>Add contact</button>\r\n      </form>\r\n</>)}\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,  \r\n};\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onDelContact}) =>{\r\n    return(\r\n        <>\r\n        <ul className={style.ulStyle}>\r\n        {contacts.map(({id, name, number})=>\r\n            <li  key= {id}>\r\n            <p className={style.list}>{name} : {number} </p> \r\n            <button type=\"submit\" name=\"button\" className={style.button} onClick={()=>onDelContact(id)}>Delete contact</button>\r\n            </li>)}\r\n        </ul>        \r\n        </>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired, \r\n    onDelContact: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport style from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({value, onChange}) =>{\r\n    return(\r\n        <>        \r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={style.input}\r\n        value={value}\r\n        onChange={onChange}        \r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n        </>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired, \r\n    onChange: PropTypes.func.isRequired, \r\n  };\r\n\r\nexport default Filter;","import React, {Component} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\n\r\nclass App extends Component\r\n{\r\n    state = {\r\n        contacts: [\r\n          {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n          {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n          {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n          {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',        \r\n      }\r\n\r\n      searchName = (searchName) =>{\r\n        return this.state.contacts.map((contact)=>contact.name.toLowerCase()).includes(searchName.toLowerCase());\r\n      }      \r\n\r\n      addContact = data =>\r\n      {        \r\n        const id = uuidv4();\r\n        const inputName = data.name;         \r\n        if(this.searchName(inputName)){return alert(`${inputName} is already in contacts`)}     \r\n        return this.setState((prevState)=>({contacts:[{id, name: data.name, number: data.number}, ...prevState.contacts]}))\r\n      };\r\n\r\n      changeFilter = e =>{        \r\n        this.setState({filter : e.currentTarget.value});\r\n      };\r\n\r\n      delContact = (id) =>\r\n      {\r\n        this.setState(prevState=>({\r\n          contacts: prevState.contacts.filter(contact=>contact.id!==id),\r\n        }))\r\n      }    \r\n\r\n    render(){     \r\n      const {filter}  = this.state;          \r\n      const normalizedFilter = this.state.filter.toLowerCase();\r\n      const visibleContacts = this.state.contacts.filter(contact=>contact.name.toLowerCase().includes(normalizedFilter))     \r\n    \r\n  return(\r\n  <>\r\n  <div className='container'>\r\n  <h1>Phonebook</h1>\r\n  <ContactForm \r\n  onSubmit={this.addContact} />\r\n\r\n  <h2>Contacts</h2>\r\n  <Filter \r\n  value = {filter}\r\n  onChange= {this.changeFilter} />\r\n\r\n  <ContactList \r\n  contacts={visibleContacts}\r\n  onDelContact = {this.delContact}\r\n   />\r\n</div> \r\n</>\r\n)\r\n}}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}