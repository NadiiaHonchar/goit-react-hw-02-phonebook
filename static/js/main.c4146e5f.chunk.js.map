{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ElementContacts/ElementContacts.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ElementContacts/ElementContacts.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","text","input","button","list","ulStyle","ContactForm","state","contacts","name","number","handleInputChange","e","_e$currentTarget","currentTarget","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","props","onSubmit","reset","react_default","a","createElement","Fragment","this","className","style","form","type","onChange","pattern","title","required","Component","defaultProps","PropTypes","func","isRequired","ElementContacts","_ref","onDelContact","map","_ref2","id","key","onClick","ContactList","components_ElementContacts_ElementContacts","Filter","App","filter","searchName","contact","toLowerCase","includes","addContact","data","uuidv4","inputName","alert","concat","prevState","toConsumableArray","changeFilter","delContact","normalizedFilter","visibleContacts","components_ContactForm_ContactForm","components_Filter_Filter","components_ContactList_ContactList","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4146e5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__1X_L7\",\"input\":\"ContactForm_input__1EFtL\",\"button\":\"ContactForm_button__ZUJz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ElementContacts_button__35cOw\",\"list\":\"ElementContacts_list__zDxFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ulStyle\":\"ContactList_ulStyle__2Zfns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2mLRC\",\"input\":\"Filter_input__3SIEZ\"};","// import React from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static defaultProps = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ contacts: [], name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={style.form}>\r\n          <h2 className={style.text}>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            className={style.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <h2 className={style.text}>Number</h2>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            className={style.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button type=\"submit\" name=\"button\" className={style.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ElementContacts.module.css\";\r\n\r\nconst ElementContacts = ({ contacts, onDelContact }) => {\r\n  return (\r\n    <>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p className={style.list}>\r\n            {name} : {number}{\" \"}\r\n          </p>\r\n          <button\r\n            type=\"submit\"\r\n            name=\"button\"\r\n            className={style.button}\r\n            onClick={() => onDelContact(id)}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nElementContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ElementContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\nimport ElementContacts from \"../ElementContacts\";\r\n\r\nconst ContactList = ({ contacts, onDelContact }) => {\r\n  return (\r\n    <ul className={style.ulStyle}>\r\n      <ElementContacts contacts={contacts} onDelContact={onDelContact} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={style.input}\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  searchName = (searchName) => {\r\n    return this.state.contacts\r\n      .map((contact) => contact.name.toLowerCase())\r\n      .includes(searchName.toLowerCase());\r\n  };\r\n\r\n  addContact = (data) => {\r\n    const id = uuidv4();\r\n    const inputName = data.name;\r\n    if (this.searchName(inputName)) {\r\n      return alert(`${inputName} is already in contacts`);\r\n    }\r\n    return this.setState((prevState) => ({\r\n      contacts: [\r\n        { id, name: data.name, number: data.number },\r\n        ...prevState.contacts,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  delContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    const visibleContacts = this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <h1>Phonebook</h1>\r\n          <ContactForm onSubmit={this.addContact} />\r\n\r\n          <h2>Contacts</h2>\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onDelContact={this.delContact}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}